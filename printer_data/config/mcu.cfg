######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
# [include config/hardware/axis/X/TMC/TMC5160.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
# [include config/hardware/axis/Y/TMC/TMC5160.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
# [include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------


#---------------------------------------------#
#### Fysetc Spider v1.x MCU definition ########
#---------------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board work by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_30004B000F50563046363120-if00
# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------

[include config/mcu_definitions/main/Fysetc_Spider_v1.x.cfg] # Do not remove this line
[board_pins spider_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_X_MOT_STEP    , X_DIR=MCU_X_MOT_DIR    , X_ENABLE=MCU_X_MOT_ENABLE    , X_TMCUART=MCU_X_MOT_CS_PDN    ,
    Y_STEP=MCU_Y_MOT_STEP    , Y_DIR=MCU_Y_MOT_DIR    , Y_ENABLE=MCU_Y_MOT_ENABLE    , Y_TMCUART=MCU_Y_MOT_CS_PDN    ,

    Z_STEP=MCU_Z_MOT_STEP    , Z_DIR=MCU_Z_MOT_DIR    , Z_ENABLE=MCU_Z_MOT_ENABLE    , Z_TMCUART=MCU_Z_MOT_CS_PDN    ,
    Z1_STEP=MCU_E1_MOT_STEP  , Z1_DIR=MCU_E1_MOT_DIR  , Z1_ENABLE=MCU_E1_MOT_ENABLE  , Z1_TMCUART=MCU_E1_MOT_CS_PDN  ,
    Z2_STEP=MCU_E2_MOT_STEP  , Z2_DIR=MCU_E2_MOT_DIR  , Z2_ENABLE=MCU_E2_MOT_ENABLE  , Z2_TMCUART=MCU_E2_MOT_CS_PDN  ,
    Z3_STEP=MCU_E3_MOT_STEP  , Z3_DIR=MCU_E3_MOT_DIR  , Z3_ENABLE=MCU_E3_MOT_ENABLE  , Z3_TMCUART=MCU_E3_MOT_CS_PDN  ,

    E_STEP=MCU_E0_MOT_STEP   , E_DIR=MCU_E0_MOT_DIR   , E_ENABLE=MCU_E0_MOT_ENABLE   , E_TMCUART=MCU_E0_MOT_CS_PDN   ,

    DRIVER_SPI_MOSI=MCU_TMC_MOSI , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_MISO=MCU_TMC_MISO , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_SCK=MCU_TMC_SCK   , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_X_MIN , Y_STOP=MCU_Y_MIN , Z_STOP=MCU_Z_MIN ,
    PROBE_INPUT=MCU_Z_MAX   ,
    RUNOUT_SENSOR=MCU_Y_MIN , # If using sensorless homing: you will need to move the runout sensor on another pin

    E_HEATER=MCU_E0_OUT    , E_TEMPERATURE=MCU_TE0  ,
    BED_HEATER=MCU_BED_OUT , BED_TEMPERATURE=MCU_TB ,

    # PART_FAN=MCU_FAN1 , E_FAN=MCU_FAN0 ,
    CONTROLLER_FAN=MCU_FAN0        ,
    EXHAUST_FAN=MCU_E2_OUT         ,
    FILTER_FAN=MCU_FAN1           ,
    HOST_CONTROLLER_FAN=MCU_RGB_G  ,

    CHAMBER_TEMPERATURE=MCU_TE1 , ELECTRICAL_CABINET_TEMPERATURE=MCU_TE2 ,

    LIGHT_OUTPUT=MCU_E1_OUT         ,
    LIGHT_NEOPIXEL=MCU_5V_RGB_DATA,
    # STATUS_NEOPIXEL=MCU_5V_RGB_DATA ,


#-------------------------------------------#
#### Mellow SB2040 v1 MCU definition ########
#-------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
canbus_uuid: a9a11b8bd027
##--------------------------------------------------------------------

# If you want to override the wiring of the Mellow SB2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/toolhead/Mellow_SB2040_v1.cfg] # Do not remove this line
[board_pins sb2040_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_EMOT_STEP , E_DIR=MCU_EMOT_DIR , E_ENABLE=MCU_EMOT_EN , E_TMCUART=MCU_EMOT_UART ,

    X_STOP=MCU_ENDSTOP ,
    PROBE_INPUT=MCU_HV_ENDSTOP ,
    TOOLHEAD_SENSOR=MCU_5V_ENDSTOP ,

    E_HEATER=MCU_HEAT , E_TEMPERATURE=MCU_TEMP , CHAMBER_TEMPERATURE=MCU_ONBOARD_NTCK100K ,

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 ,

    STATUS_NEOPIXEL=MCU_RGB ,

    ADXL_CS=MCU_ADXL_CS , ADXL_SCLK=MCU_ADXL_SCK , ADXL_MOSI=MCU_ADXL_MOSI , ADXL_MISO=MCU_ADXL_MISO ,


#----------------------------------------#
#     Mellow SB2040 v1 pins remapping    #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE

[probe]
pin: ^!toolhead:PROBE_INPUT

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
# [stepper_x]
# endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART

